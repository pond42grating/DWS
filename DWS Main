<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DWS Management</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }
        .container {
            width: 80%;
            margin: 50px auto;
        }
        .nav-buttons {
            display: flex;
            justify-content: space-between;
            margin-bottom: 30px;
        }
        .nav-buttons button {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
        }
        .section {
            display: none;
        }
        .form-input {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            font-size: 16px;
            border: 1px solid #ccc;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        table, th, td {
            border: 1px solid #ddd;
        }
        th, td {
            padding: 8px 12px;
            text-align: left;
        }
        button {
            padding: 8px 12px;
            cursor: pointer;
            background-color: #007bff;
            color: white;
            border: none;
            margin-right: 10px;
        }
    </style>
</head>
<body>

    <div class="container">
        <!-- Navigation Section -->
        <div class="nav-buttons">
            <button onclick="switchSection('createDWSSection')">Create DWS</button>
            <button onclick="switchSection('manageDWSSection')">Manage DWS</button>
            <button onclick="switchSection('searchDWSSection')">Search DWS</button>
            <button onclick="switchSection('exportDWSSection')">Export DWS</button>
        </div>

        <!-- Create DWS Section -->
        <div id="createDWSSection" class="section">
            <h2>Create DWS</h2>
            <form id="createDWSForm">
                <input type="text" id="dwsNo" class="form-input" placeholder="DWS No." disabled>
                <input type="date" id="date" class="form-input" placeholder="Date">
                <input type="text" id="structureName" class="form-input" placeholder="Structure Name">
                <input type="text" id="siNo" class="form-input" placeholder="SI No.">
                <input type="text" id="workDescription" class="form-input" placeholder="Work Description">
                <input type="text" id="location" class="form-input" placeholder="Location">
                
                <!-- Manpower Section -->
                <h3>Manpower</h3>
                <div id="manpowerSection">
                    <div class="form-input">
                        <input type="text" placeholder="Badge No." id="badgeNo">
                        <input type="text" placeholder="Name" id="manpowerName">
                        <input type="number" placeholder="Normal Hours" id="normalHours">
                        <input type="number" placeholder="OT Hours" id="otHours">
                        <input type="number" placeholder="Holiday Hours" id="holidayHours">
                        <button type="button" onclick="addManpower()">Add Manpower</button>
                    </div>
                </div>
                
                <!-- Equipment Section -->
                <h3>Equipment</h3>
                <div id="equipmentSection">
                    <div class="form-input">
                        <input type="text" placeholder="Equipment Name" id="equipmentName">
                        <input type="number" placeholder="Working Hours" id="equipmentHours">
                        <button type="button" onclick="addEquipment()">Add Equipment</button>
                    </div>
                </div>
                
                <!-- Consumables Section -->
                <h3>Consumables/Materials</h3>
                <div id="consumablesSection">
                    <div class="form-input">
                        <input type="text" placeholder="Consumable/Material Name" id="consumablesName">
                        <input type="number" placeholder="Quantity" id="consumablesQuantity">
                        <button type="button" onclick="addConsumables()">Add Consumable</button>
                    </div>
                </div>

                <button type="button" onclick="saveDWS()">Save DWS</button>
            </form>
        </div>

        <!-- Manage DWS Section -->
        <div id="manageDWSSection" class="section">
            <h2>Manage DWS</h2>
            <table>
                <thead>
                    <tr>
                        <th>DWS No.</th>
                        <th>Date</th>
                        <th>Structure Name</th>
                        <th>SI No.</th>
                        <th>Work Description</th>
                        <th>Location</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="dwsTableBody">
                    <!-- Dynamic content will be added here -->
                </tbody>
            </table>
        </div>

        <!-- Search DWS Section -->
        <div id="searchDWSSection" class="section">
            <h2>Search DWS</h2>
            <input type="number" id="searchDWSNo" class="form-input" placeholder="Enter DWS No.">
            <button type="button" id="searchDWSBtn">Search</button>
            <div id="searchResult"></div>
        </div>

        <!-- Export DWS Section -->
        <div id="exportDWSSection" class="section">
            <h2>Export DWS</h2>
            <button id="exportToExcelBtn">Export to Excel</button>
            <button id="exportToPDFBtn">Export to PDF</button>
        </div>
    </div>

    <script>
        let dwsData = JSON.parse(localStorage.getItem('dwsData')) || [];
        let nextDwsNo = dwsData.length ? Math.max(...dwsData.map(dws => dws.dwsNo)) + 1 : 1;

        function switchSection(sectionId) {
            // Hide all sections
            document.querySelectorAll('.section').forEach(section => {
                section.style.display = 'none';
            });

            // Show the selected section
            document.getElementById(sectionId).style.display = 'block';
        }

        function saveDWS() {
            const dws = {
                dwsNo: nextDwsNo,
                date: document.getElementById('date').value,
                structureName: document.getElementById('structureName').value,
                siNo: document.getElementById('siNo').value,
                workDescription: document.getElementById('workDescription').value,
                location: document.getElementById('location').value,
                manpower: [],
                equipment: [],
                consumables: []
            };

            // Add manpower, equipment, and consumables data
            const manpowerSection = document.getElementById('manpowerSection');
            const manpower = Array.from(manpowerSection.querySelectorAll('.form-input')).map(input => ({
                badgeNo: input.querySelector('#badgeNo').value,
                name: input.querySelector('#manpowerName').value,
                normalHours: input.querySelector('#normalHours').value,
                otHours: input.querySelector('#otHours').value,
                holidayHours: input.querySelector('#holidayHours').value,
            }));
            dws.manpower = manpower;

            const equipmentSection = document.getElementById('equipmentSection');
            const equipment = Array.from(equipmentSection.querySelectorAll('.form-input')).map(input => ({
                equipmentName: input.querySelector('#equipmentName').value,
                workingHours: input.querySelector('#equipmentHours').value,
            }));
            dws.equipment = equipment;

            const consumablesSection = document.getElementById('consumablesSection');
            const consumables = Array.from(consumablesSection.querySelectorAll('.form-input')).map(input => ({
                consumableName: input.querySelector('#consumablesName').value,
                quantity: input.querySelector('#consumablesQuantity').value,
            }));
            dws.consumables = consumables;

            dwsData.push(dws);
            localStorage.setItem('dwsData', JSON.stringify(dwsData));
            nextDwsNo++;

            // Clear form and switch to Manage DWS section
            document.getElementById('createDWSForm').reset();
            switchSection('manageDWSSection');
            loadDWSData();
        }

        function loadDWSData() {
            const tbody = document.getElementById('dwsTableBody');
            tbody.innerHTML = '';
            dwsData.forEach(dws => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${dws.dwsNo}</td>
                    <td>${dws.date}</td>
                    <td>${dws.structureName}</td>
                    <td>${dws.siNo}</td>
                    <td>${dws.workDescription}</td>
                    <td>${dws.location}</td>
                    <td>
                        <button onclick="editDWS(${dws.dwsNo})">Edit</button>
                        <button onclick="deleteDWS(${dws.dwsNo})">Delete</button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        function editDWS(dwsNo) {
            const dws = dwsData.find(dws => dws.dwsNo === dwsNo);
            document.getElementById('dwsNo').value = dws.dwsNo;
            document.getElementById('date').value = dws.date;
            document.getElementById('structureName').value = dws.structureName;
            document.getElementById('siNo').value = dws.siNo;
            document.getElementById('workDescription').value = dws.workDescription;
            document.getElementById('location').value = dws.location;
            switchSection('createDWSSection');
        }

        function deleteDWS(dwsNo) {
            if (confirm('Are you sure you want to delete this DWS?')) {
                dwsData = dwsData.filter(dws => dws.dwsNo !== dwsNo);
                localStorage.setItem('dwsData', JSON.stringify(dwsData));
                loadDWSData();
            }
        }

        document.getElementById('searchDWSBtn').addEventListener('click', () => {
            const searchNo = document.getElementById('searchDWSNo').value;
            const result = dwsData.find(dws => dws.dwsNo == searchNo);
            const searchResultDiv = document.getElementById('searchResult');
            if (result) {
                searchResultDiv.innerHTML = `
                    <h3>Search Results</h3>
                    <p>DWS No: ${result.dwsNo}</p>
                    <p>Date: ${result.date}</p>
                    <p>Structure Name: ${result.structureName}</p>
                    <p>SI No: ${result.siNo}</p>
                    <p>Work Description: ${result.workDescription}</p>
                    <p>Location: ${result.location}</p>
                `;
            } else {
                searchResultDiv.innerHTML = '<p>No results found.</p>';
            }
        });

        document.getElementById('exportToExcelBtn').addEventListener('click', () => {
            const wb = XLSX.utils.book_new();
            const ws = XLSX.utils.json_to_sheet(dwsData);
            XLSX.utils.book_append_sheet(wb, ws, 'DWS Data');
            XLSX.writeFile(wb, 'DWS_Data.xlsx');
        });

        document.getElementById('exportToPDFBtn').addEventListener('click', () => {
            const doc = new jsPDF();
            doc.autoTable({
                head: [['DWS No.', 'Date', 'Structure Name', 'SI No.', 'Work Description', 'Location']],
                body: dwsData.map(dws => [
                    dws.dwsNo, dws.date, dws.structureName, dws.siNo, dws.workDescription, dws.location
                ]),
            });
            doc.save('DWS_Data.pdf');
        });

        // Initial section setup
        switchSection('createDWSSection');
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.autotable.min.js"></script>

</body>
</html>